<div class="container p-4 mt-2">
    <div class="row">
        {{#if bloque.length}}
        <!-- Botón para Descargar Excel y agregar dato -->
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="mb-0">Bloques Existentes</h1>
            </div>
            <div class="mb-2">
                <button class="btn btn-dark btn-sm" onclick="toggleFiltros()">
                    <i class="fa-solid fa-filter"></i><i class="bi bi-funnel"></i> Ver filtros
                </button>
                <button id="btnBorrarFiltros" class="btn btn-secondary btn-sm" onclick="borrarFiltros()" disabled>
                    <i class="fas fa-trash-alt"></i>&nbsp;Borrar filtros
                </button>
                <a href="/bloque/descargar-excel" class="btn btn-success btn-sm">
                    Descargar Excel Con Datos
                </a>
                <a href="/bloque/add" class="btn btn-success btn-sm">
                    Agregar nuevo bloque
                </a>
            </div>
            <!-- Input de búsqueda -->
            <div id="contenedorFiltros" class="row mb-3" style="display: none;">
                <div class="col-md-3 mb-2">
                    <input onkeyup="filtrarTabla(); verificarFiltros()" type="text" id="filtroNombre"
                        class="form-control form-control-sm" placeholder="Filtrar por nombre de bloque">
                </div>
                <div class="col-md-3 mb-2">
                    <input onkeyup="filtrarTabla(); verificarFiltros()" type="text" id="filtroFactorC"
                        class="form-control form-control-sm" placeholder="Filtrar por Factor de Contracción">
                </div>
                <div class="col-md-3 mb-2">
                    <input onkeyup="filtrarTabla(); verificarFiltros()" type="text" id="filtroCodigoB"
                        class="form-control form-control-sm" placeholder="Filtrar por codigo de barras">
                </div>
                <div class="col-md-3 mb-2">
                    <input onkeyup="filtrarTabla(); verificarFiltros()" type="text" id="filtroLote"
                        class="form-control form-control-sm" placeholder="Filtrar por Lote">
                </div>
                <div class="col-md-3 mb-2">
                    <select onchange="filtrarTabla(); verificarFiltros()" id="filtroEstado"
                        class="form-control form-control-sm">
                        <option value="">Filtrar por Estado</option>
                        <option value="En uso">En uso</option>
                        <option value="Finalizado">Finalizado</option>
                    </select>
                </div>
                <div class="col-md-3 mb-2">
                    <input onkeyup="filtrarTabla(); verificarFiltros()" type="text" id="filtroColor"
                        class="form-control form-control-sm" placeholder="Filtrar por Color">
                </div>
                <div class="col-md-3 mb-2">
                    <input onkeyup="filtrarTabla(); verificarFiltros()" type="text" id="filtroTamano"
                        class="form-control form-control-sm" placeholder="Filtrar por Tamaño">
                </div>
                <div class="col-md-3 mb-2">
                    <input onkeyup="filtrarTabla(); verificarFiltros()" type="text" id="filtroMaterial"
                        class="form-control form-control-sm" placeholder="Filtrar por Material">
                </div>
            </div>
            <div class="row mb-2 align-items-center">
                <div class="col-auto">
                    <label for="registrosPorPagina" class="form-label mb-0">Mostrar:</label>
                    <select id="registrosPorPagina" class="form-select form-select-sm d-inline-block"
                        style="width:auto;">
                        <option value="10">10</option>
                        <option value="20" selected>20</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                </div>
                <div class="col-auto" id="infoRegistros">Mostrando registros 0 - 0 de 0</div>
            </div>
            <div class="table-responsive">
                <table class="table table-striped table-secondary table-bordered table-sm"
                    style="table-layout: auto; font-size: 0.8rem; text-align: center;">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>&nbsp;Factor&nbsp;de&nbsp;contracción&nbsp;</th>
                            <th>Codigo de Barras</th>
                            <th>Lote</th>
                            <th>Estado</th>
                            <th>Color</th>
                            <th>Tamaño</th>
                            <th>Material</th>
                            <th>Fecha&nbsp;de&nbsp;Creación</th>
                            <th>Fecha&nbsp;de&nbsp;Finalización</th>
                            <th>Operario</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="tablaBloques">
                        {{#each bloque}}
                        <tr class="fila-bloque">
                            <td class="text-nowrap" style="white-space: normal;">{{this.nombre}}</td>
                            <td class="text-center">{{this.factor_contraccion}}</td>
                            <td class="text-center">{{this.codigo_barras}}</td>
                            <td class="text-center">{{this.cantidad}}</td>
                            <td class="text-center">
                                <form action="/bloque/update" method="POST" id="estado-form-{{this.id_bloque}}">
                                    <input type="hidden" name="id_bloque" value="{{this.id_bloque}}">
                                    <select name="estado" class="form-control form-control-sm 
                                        {{#if this.estado}}bg-success text-white{{else}}bg-danger text-white{{/if}}"
                                        {{#unless this.estado}}disabled{{/unless}} onchange="this.form.submit()">
                                        <option value="1" {{#if this.estado}}selected{{/if}}>En uso</option>
                                        <option value="0" {{#unless this.estado}}selected{{/unless}}>Finalizado</option>
                                    </select>
                                </form>
                            </td>
                            <td>{{this.color}}</td>
                            <td>{{this.tamano}}</td>
                            <td>{{this.tipo_material}}</td>
                            <td>{{formatFecha this.fecha_creacion}} / {{formatHora this.fecha_creacion}}</td>
                            <td>{{#if this.fecha_finalizacion}}
                                {{formatFecha this.fecha_finalizacion}} / {{formatHora this.fecha_finalizacion}}
                                {{else}}
                                <span class="text-muted">...</span> <!-- O deja vacío si prefieres -->
                                {{/if}}
                            </td>

                            <td>{{this.operario_fullname}}</td>
                            <td>
                                {{#if this.estado}}
                                <!-- Botones activos -->
                                <a class="btn btn-warning btn-sm" href="/bloque/edit/{{this.id_bloque}}"><i
                                        class="fas fa-edit"></i></a>
                                <hr>
                                <a class="btn btn-danger btn-sm" href="/bloque/delete/{{this.id_bloque}}"><i
                                        class="fas fa-trash-alt"></i></a>
                                {{else}}
                                <!-- Botones deshabilitados en estado Finalizado -->
                                <button class="btn btn-secondary btn-sm" disabled title="Bloque finalizado"><i
                                        class="fas fa-edit"></i></button>
                                <hr>
                                <button class="btn btn-secondary btn-sm" disabled title="Bloque finalizado"><i
                                        class="fas fa-trash-alt"></i></button>
                                {{/if}}
                            </td>
                        </tr>
                        {{/each}}
                        <!-- Mensaje cuando no hay coincidencias -->
                        <tr id="mensajeNoCoincidencias" style="display: none;">
                            <td colspan="11" class="text-center text-danger">No existe ese Bloque</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <nav>
                <ul id="paginacion" class="pagination pagination-sm"></ul>
            </nav>
        </div>
        {{else}}
        <div class="col-md-4 mx-auto">
            <div class="card card-body text-center">
                <p>No hay bloques guardados aún.</p>
                <a href="/bloque/add" class="btn btn-primary">Crear uno</a>
            </div>
        </div>
        {{/if}}
    </div>
</div>
<script>
    const filas = Array.from(document.querySelectorAll(".fila-bloque"));
    const selectRegistros = document.getElementById("registrosPorPagina");
    const infoRegistros = document.getElementById("infoRegistros");
    const paginacion = document.getElementById("paginacion");
    const mensaje = document.getElementById("mensajeNoCoincidencias");

    let paginaActual = 1;
    let registrosPorPagina = parseInt(selectRegistros.value);

    selectRegistros.addEventListener("change", () => {
        registrosPorPagina = parseInt(selectRegistros.value);
        paginaActual = 1;
        mostrarPagina();
    });

    function toggleFiltros() {
        const contenedor = document.getElementById("contenedorFiltros");
        contenedor.style.display = contenedor.style.display === "none" ? "flex" : "none";
    }

    function verificarFiltros() {
        const filtros = [
            "filtroNombre",
            "filtroFactorC",
            "filtroCodigoB",
            "filtroLote",
            "filtroEstado",
            "filtroColor",
            "filtroTamano",
            "filtroMaterial"
        ];
        const boton = document.getElementById("btnBorrarFiltros");
        const hayTexto = filtros.some(id => document.getElementById(id).value.trim() !== "");

        boton.disabled = !hayTexto;
        boton.classList.toggle("btn-danger", hayTexto);
        boton.classList.toggle("btn-secondary", !hayTexto);
    }

    function filtrarTabla() {
        const filtroNombre = document.getElementById("filtroNombre").value.toLowerCase();
        const filtroFactorC = document.getElementById("filtroFactorC").value.toLowerCase();
        const filtroCodigoB = document.getElementById("filtroCodigoB").value.toLowerCase();
        const filtroLote = document.getElementById("filtroLote").value.toLowerCase();
        const filtroEstado = document.getElementById("filtroEstado").value;
        const filtroColor = document.getElementById("filtroColor").value.toLowerCase();
        const filtroTamano = document.getElementById("filtroTamano").value.toLowerCase();
        const filtroMaterial = document.getElementById("filtroMaterial").value.toLowerCase();

        let coincidencias = 0;

        filas.forEach(fila => {
            fila.dataset.visible = "false"; // Resetea estado

            const nombre = fila.cells[0].textContent.toLowerCase();
            const factorc = fila.cells[1].textContent.toLowerCase();
            const codigob = fila.cells[2].textContent.toLowerCase();
            const lote = fila.cells[3].textContent.toLowerCase();
            const selectEstado = fila.cells[4].querySelector('select');
            const estado = selectEstado ? selectEstado.options[selectEstado.selectedIndex].text : "";
            const color = fila.cells[5].textContent.toLowerCase();
            const tamano = fila.cells[6].textContent.toLowerCase();
            const material = fila.cells[7].textContent.toLowerCase();

            const coincide =
                nombre.includes(filtroNombre) &&
                factorc.includes(filtroFactorC) &&
                codigob.includes(filtroCodigoB) &&
                lote.includes(filtroLote) &&
                (filtroEstado === "" || estado === filtroEstado) &&
                color.includes(filtroColor) &&
                tamano.includes(filtroTamano) &&
                material.includes(filtroMaterial);

            if (coincide) {
                fila.dataset.visible = "true"; // Marca como visible
                coincidencias++;
            }
        });

        mensaje.style.display = coincidencias === 0 ? "" : "none";

        paginaActual = 1;
        mostrarPagina();
    }

    function borrarFiltros() {
        ["filtroNombre", "filtroFactorC", "filtroCodigoB", "filtroLote", "filtroEstado", "filtroColor", "filtroTamano", "filtroMaterial"].forEach(id => {
            document.getElementById(id).value = "";
        });
        filtrarTabla();
        verificarFiltros();
    }

    function mostrarPagina() {
        const filasVisibles = filas.filter(fila => fila.dataset.visible === "true");
        const totalFilas = filasVisibles.length;
        const totalPaginas = Math.ceil(totalFilas / registrosPorPagina) || 1;

        if (paginaActual > totalPaginas) paginaActual = totalPaginas;

        filas.forEach(fila => fila.style.display = "none"); // Oculta todo
        const inicio = (paginaActual - 1) * registrosPorPagina;
        const fin = inicio + registrosPorPagina;
        filasVisibles.slice(inicio, fin).forEach(fila => fila.style.display = "");

        const mostrarInicio = totalFilas === 0 ? 0 : inicio + 1;
        const mostrarFin = fin > totalFilas ? totalFilas : fin;
        infoRegistros.textContent = `Mostrando registros ${mostrarInicio} - ${mostrarFin} de ${totalFilas}`;

        paginacion.innerHTML = "";

        const liAnterior = document.createElement("li");
        liAnterior.className = "page-item " + (paginaActual === 1 ? "disabled" : "");
        liAnterior.innerHTML = `<a class="page-link" href="#">&laquo; Anterior</a>`;
        liAnterior.onclick = e => {
            e.preventDefault();
            if (paginaActual > 1) {
                paginaActual--;
                mostrarPagina();
            }
        };
        paginacion.appendChild(liAnterior);

        for (let i = 1; i <= totalPaginas; i++) {
            const li = document.createElement("li");
            li.className = "page-item " + (i === paginaActual ? "active" : "");
            li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
            li.onclick = e => {
                e.preventDefault();
                paginaActual = i;
                mostrarPagina();
            };
            paginacion.appendChild(li);
        }

        const liSiguiente = document.createElement("li");
        liSiguiente.className = "page-item " + (paginaActual === totalPaginas ? "disabled" : "");
        liSiguiente.innerHTML = `<a class="page-link" href="#">Siguiente &raquo;</a>`;
        liSiguiente.onclick = e => {
            e.preventDefault();
            if (paginaActual < totalPaginas) {
                paginaActual++;
                mostrarPagina();
            }
        };
        paginacion.appendChild(liSiguiente);
    }
    filas.forEach(fila => fila.dataset.visible = "true");
    mostrarPagina();
</script>